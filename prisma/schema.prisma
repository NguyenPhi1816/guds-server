// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  Id              Int    @id @default(autoincrement())
  UserPhoneNumber String @unique
  Password        String
  UserRoleId      Int
  Status          String

  userRole UserRole @relation(fields: [UserRoleId], references: [Id])
  user     User     @relation(fields: [UserPhoneNumber], references: [PhoneNumber])
}

model UserRole {
  Id   Int    @id @default(autoincrement())
  Name String

  accounts Account[]
}

model User {
  Id          Int      @id @default(autoincrement())
  FirstName   String
  LastName    String
  Address     String
  PhoneNumber String   @unique
  Gender      String
  DateOfBirth DateTime
  Avatar      String?
  Email       String   @unique

  account Account?
}

model Category {
  Id          Int    @id @default(autoincrement())
  Slug        String @unique
  Name        String @unique
  Image       String
  Description String

  baseProducts BaseProduct[]
}

model BaseProduct {
  Id          Int    @id @default(autoincrement())
  Slug        String @unique
  Name        String @unique
  Description String
  CategoryId  Int
  Status      String

  category Category           @relation(fields: [CategoryId], references: [Id])
  images   BaseProductImage[]
}

model BaseProductImage {
  Id            Int     @id @default(autoincrement())
  BaseProductId Int
  Path          String
  IsDefault     Boolean

  baseProduct BaseProduct @relation(fields: [BaseProductId], references: [Id])
}

model Option {
  Id   Int    @id @default(autoincrement())
  Name String @unique

  optionValues OptionValue[]
}

model OptionValue {
  Id       Int    @id @default(autoincrement())
  OptionId Int
  Value    String

  option              Option               @relation(fields: [OptionId], references: [Id])
  optionValueVariants OptionValueVariant[]
}

model OptionValueVariant {
  OptionValueId    Int
  ProductVariantId Int

  optionValue    OptionValue    @relation(fields: [OptionValueId], references: [Id])
  productVariant ProductVariant @relation(fields: [ProductVariantId], references: [Id])

  @@id([OptionValueId, ProductVariantId])
}

model ProductVariant {
  Id            Int    @id @default(autoincrement())
  Quantity      Int
  Image         String
  BaseProductId Int

  optionValueVariants OptionValueVariant[]
  prices              Price[]
}

model Price {
  ProductVariantId Int
  Price            Int
  UpdatedAt        DateTime

  ProductVariant ProductVariant @relation(fields: [ProductVariantId], references: [Id])

  @@id([ProductVariantId, Price, UpdatedAt])
}
